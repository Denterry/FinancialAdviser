syntax = "proto3";

package ml_service;

option go_package = "github.com/Denterry/FinancialAdviser/Backend/ml-service/proto";


// --- SERVICE ---
// ML Service definition
service MLService {
  // Analyze sentiment of text
  rpc AnalyzeSentiment(SentimentRequest) returns (SentimentResponse) {}
  
  // Batch analyze sentiment
  rpc BatchAnalyzeSentiment(BatchSentimentRequest) returns (BatchSentimentResponse) {}
  
  // Predict price trends
  rpc PredictTrend(TrendRequest) returns (TrendResponse) {}
  
  // Get available symbols
  rpc GetSymbols(GetSymbolsRequest) returns (GetSymbolsResponse) {}
  
  // Analyze trading opportunity
  rpc AnalyzeTrading(TradingRequest) returns (TradingResponse) {}
  
  // Execute trade
  rpc ExecuteTrade(TradingRequest) returns (TradeExecutionResponse) {}
}



// --- REQUESTS & RESPONSES ---
// Sentiment Analysis
message SentimentRequest {
  string text = 1;
}

message SentimentResponse {
  float positive = 1;
  float neutral = 2;
  float negative = 3;
}

message BatchSentimentRequest {
  repeated string texts = 1;
}

message BatchSentimentResponse {
  repeated SentimentResponse results = 1;
}

// Trend Prediction
message PriceData {
  string date = 1;
  double price = 2;
}

message TrendRequest {
  string symbol = 1;
  repeated PriceData data = 2;
  int32 periods = 3;
}

message TrendResponse {
  repeated string dates = 1;
  repeated double predictions = 2;
  repeated double lower_bound = 3;
  repeated double upper_bound = 4;
}

message GetSymbolsRequest {}

message GetSymbolsResponse {
  repeated string symbols = 1;
}

// Trading
message MarketData {
  string symbol = 1;
  double price = 2;
  double volume = 3;
  string timestamp = 4;
  map<string, double> indicators = 5;
}

message TradingRequest {
  MarketData market_data = 1;
  map<string, double> sentiment_data = 2;
  map<string, double> trend_data = 3;
}

message TradingResponse {
  string action = 1;
  double confidence = 2;
  map<string, string> parameters = 3;
  string explanation = 4;
}

message TradeExecutionResponse {
  string status = 1;
  map<string, string> trade = 2;
  TradingResponse analysis = 3;
} 